{#
/**
 * @file
 * Default theme implementation to display a paragraph:
 *  MODIFIED FOR TYPE: image with text
 *
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   - id: The paragraph ID.
 *   - bundle: The type of the paragraph, for example, "image" or "text".
 *   - authorid: The user ID of the paragraph author.
 *   - createdtime: Formatted creation date. Preprocess functions can
 *     reformat it by calling format_date() with the desired parameters on
 *     $variables['paragraph']->getCreatedTime().
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}

{# Renders Background field. #}
{% if content.field_background_color|render %}
    {% set background_settings = 'back_' ~ content.field_background_color['0']['#markup'] %}
{% endif %}

{# Renders Width field. #}
{% if content.field_column_width|render %}
  {% set layout_width_settings = content.field_column_width['0']['#markup'] %}
{% endif %}

	{% if content.field_image_link|render %}
		{% set showlink = true %}
	{% endif %}


{%
set classes = [
 'column-image',
 layout_width_settings|clean_class, 
 background_settings|clean_class, 
]
%}


{# Prints div with classes, and content without Width and Background. #}
<div {{ attributes.addClass(classes) }} data-equalizer-watch>
	{% if showlink %}
		  <a href="{{ content.field_image_link[0]['#url'] }}">
	{% endif %}
  	{{ content|without('field_column_width', 'field_background_color', 'field_image_link') }}
	{% if showlink %}
		 </a>
	{% endif %}
</div>
